name: ci

on:
  push:
    branches:
      - main
    paths:
      - 'pyproject.toml'
      - 'poetry.lock'
      - 'environment.yml'
      - 'files/'
      - 'copy.sh'
  pull_request:
    branches:
      - '*'
    paths:
      - 'pyproject.toml'
      - 'poetry.lock'
      - 'environment.yml'
      - 'files/'
      - 'copy.sh'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:  
          submodules: recursive
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: snok/install-poetry@v1.3.3
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Cache venv
        id: cached-pip-wheels
        uses: actions/cache@v3
        with:
          path: ~/.cache
          key: venv-${{ hashFiles('**/poetry.lock') }}
      - name: Install Python dependencies
        run: |
          poetry install --no-interaction --no-root
      - name: Copy to-be-included files
        run: |
          bash copy.sh
      - name: Build
        shell: bash -l {0}
        run: |
          poetry run jupyter lite build
      - uses: actions/upload-pages-artifact@v1
        with:
          path: ./_output/
  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - id: deployment
        uses: actions/deploy-pages@v1
